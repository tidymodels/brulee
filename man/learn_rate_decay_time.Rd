% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schedulers.R
\name{learn_rate_decay_time}
\alias{learn_rate_decay_time}
\alias{learn_rate_constant}
\alias{learn_rate_decay_expo}
\alias{learn_rate_step}
\alias{set_learn_rate}
\title{Decrease the learning rate over time}
\usage{
learn_rate_decay_time(epoch, initial = 0.1, decay = 1)

learn_rate_constant(epoch, initial = 0.1)

learn_rate_decay_expo(epoch, initial = 0.1, decay = 1)

learn_rate_step(epoch, initial = 0.1, reduction = 1/2, steps = 5)

set_learn_rate(epoch, type = "constant", ...)
}
\arguments{
\item{epoch}{An integer for the number of training epochs (zero being the
initial value),}

\item{initial}{A positive numeric value for the starting learning rate.}

\item{decay}{A positive numeric constant for decreasing the rate (see
Details below).}

\item{reduction}{A positive numeric constant stating the proportional decrease
in the learning rate occurring at every \code{steps} epochs.}

\item{steps}{The number of epochs before the learning rate changes.}

\item{type}{A single character value for the type of scheduler. Possible
values are: "decay_time", "decay_expo", "constant", and "step".}

\item{...}{Arguments to pass to the individual scheduler functions (e.g.
\code{reduction}).}
}
\value{
A numeric value for the updated learning rate.
}
\description{
Learning rate schedulers alter the learning rate to decrease as the number of
training epochs increases. The \verb{learn_rate_*()} functions are individual
schedulers and \code{\link[=set_learn_rate]{set_learn_rate()}} is a general interface.
}
\details{
The details for how the schedulers change the rates:
\itemize{
\item \code{learn_rate_decay_time()}: \eqn{rate(epoch) = initial/(1 + decay \times epoch)}
\item \code{learn_rate_decay_expo()}: \eqn{initial\exp(-decay \times epoch)}
\item \code{learn_rate_step()}: \eqn{initial \times reduction^{floor(epoch / steps)}}
}
}
\examples{
library(ggplot2)
library(dplyr)
library(purrr)

iters <- seq(0, 50, length.out = 200)

bind_rows(
 tibble(epoch = iters, rate = map_dbl(iters, learn_rate_constant), type = "constant"),
 tibble(epoch = iters, rate = map_dbl(iters, learn_rate_decay_time), type = "decay_time"),
 tibble(epoch = iters, rate = map_dbl(iters, learn_rate_decay_expo), type = "decay_expo"),
 tibble(epoch = iters, rate = map_dbl(iters, learn_rate_step), type = "step")
) \%>\%
 ggplot(aes(epoch, rate)) +
 geom_line() +
 facet_wrap(~ type)
}
\seealso{
\code{\link[=brulee_mlp]{brulee_mlp()}}
}
